@model InventoryManagementSystem.Models.Inventory

@{
    ViewData["Title"] = "Manage Inventory: " + Model.Name;
}

<h2>@ViewData["Title"]</h2>

<div>
    <a asp-action="Index" asp-controller="Home">Back to Home</a>
</div>
<hr />

<div class="row">
    <div class="col-md-12">
        <ul class="nav nav-tabs" id="inventoryTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="items-tab" data-bs-toggle="tab" data-bs-target="#items-tab-pane" type="button" role="tab" aria-controls="items-tab-pane" aria-selected="true">Items</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="fields-tab" data-bs-toggle="tab" data-bs-target="#fields-tab-pane" type="button" role="tab" aria-controls="fields-tab-pane" aria-selected="false">Fields</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="customid-tab" data-bs-toggle="tab" data-bs-target="#customid-tab-pane" type="button" role="tab" aria-controls="customid-tab-pane" aria-selected="false">Custom ID</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="access-tab" data-bs-toggle="tab" data-bs-target="#access-tab-pane" type="button" role="tab" aria-controls="access-tab-pane" aria-selected="false">Access</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="admin-tab" data-bs-toggle="tab" data-bs-target="#admin-tab-pane" type="button" role="tab">Administration</button>
            </li>
        </ul>

        <div class="tab-content" id="inventoryTabsContent">
            <!-- Items Tab Pane (Active by default) -->
            <div class="tab-pane fade show active" id="items-tab-pane" role="tabpanel">
                <partial name="_InventoryItemsTab" model="Model" view-data="ViewData" />
            </div>

            <!-- Fields Tab Pane -->
            <div class="tab-pane fade" id="fields-tab-pane" role="tabpanel" aria-labelledby="fields-tab" tabindex="0">
                <div class="card card-body mt-3">
                    <div class="row">
                        <div class="col-md-8">
                            <form id="fieldsForm" method="post">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="inventoryId" value="@Model.Id" />

                                <!-- Fields Toolbar -->
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <h5 class="mb-0">Current Fields</h5>
                                    <div>
                                        <button type="button" class="btn btn-outline-secondary" id="editSelectedFieldBtn" disabled>Edit Selected</button>
                                        <button type="button" class="btn btn-danger" id="deleteSelectedFieldsBtn">Delete Selected</button>
                                    </div>
                                </div>
                                <p class="text-muted small">Drag and drop rows to reorder.</p>

                                <!-- Fields List -->
                                <ul id="fields-list" class="list-group"></ul>
                            </form>
                        </div>
                        <div class="col-md-4">
                            <h5>Add New Field</h5>
                            <div class="card">
                                <div class="card-body">
                                    <div class="form-group mb-3">
                                        <label for="newFieldName" class="form-label">Field Name</label>
                                        <input type="text" id="newFieldName" class="form-control" />
                                    </div>
                                    <div class="form-group mb-3">
                                        <label for="newFieldType" class="form-label">Field Type</label>
                                        <select id="newFieldType" class="form-select">
                                            <option value="String">Single-line text</option>
                                            <option value="Text">Multi-line text</option>
                                            <option value="Numeric">Number</option>
                                            <option value="Bool">Checkbox (Yes/No)</option>
                                            <option value="FileUrl">Document/Image URL</option>
                                        </select>
                                    </div>
                                    <button type="button" id="addFieldBtn" class="btn btn-primary w-100">Add Field</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Custom ID Tab Pane -->
            <div class="tab-pane fade" id="customid-tab-pane" role="tabpanel" aria-labelledby="customid-tab" tabindex="0">
                <div class="card mt-3">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">ID Format Preview</h5>
                        <button id="saveIdFormatBtn" type="button" class="btn btn-primary">Save Format</button>
                    </div>
                    <div class="card-body bg-light">
                        <p class="font-monospace fs-5 text-center bg-white p-2 rounded">
                            <span id="idPreview">No format defined.</span>
                        </p>
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-md-8">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h5 class="mb-0">Current Format</h5>
                            <div>
                                <button id="editSelectedSegmentBtn" type="button" class="btn btn-outline-secondary" disabled>Edit</button>
                                <button id="removeSelectedSegmentsBtn" type="button" class="btn btn-danger">Remove Selected</button>
                                <button id="clearFormatBtn" type="button" class="btn btn-warning">Clear All</button>
                            </div>
                        </div>
                        <p class="text-muted small">Drag segments from the right to build your ID format. Drag to reorder or use the toolbar to manage.</p>
                        <div id="current-format-list" class="list-group border rounded p-2" style="min-height: 200px;">
                            <!-- Segments will be rendered here by JS -->
                        </div>
                    </div>
                    <div class="col-md-4">
                        <h5>Available Segments</h5>
                        <p class="text-muted small">This is a palette of available components for your ID.</p>
                        <div id="available-segments-list" class="list-group">
                            <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center" data-segment-type="FixedText">
                                <div><i class="bi bi-fonts me-2"></i> Fixed Text <small class="text-muted d-block">e.g., "-"</small></div>
                                <i class="bi bi-question-circle-fill text-muted" data-bs-toggle="popover" data-bs-trigger="hover" title="Fixed Text" data-bs-content="Adds a constant piece of text to the ID."></i>
                            </div>
                            <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center" data-segment-type="Sequence">
                                <div><i class="bi bi-sort-numeric-down me-2"></i> Sequence <small class="text-muted d-block">e.g., "0001"</small></div>
                                <i class="bi bi-question-circle-fill text-muted" data-bs-toggle="popover" data-bs-trigger="hover" title="Sequence" data-bs-content="An auto-incrementing number. The 'padding' determines the total length (e.g., padding 4 makes '1' become '0001')."></i>
                            </div>
                            <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center" data-segment-type="Date">
                                <div><i class="bi bi-calendar-date me-2"></i> Date/Time <small class="text-muted d-block">e.g., "2025-09-04"</small></div>
                                <i class="bi bi-question-circle-fill text-muted" data-bs-toggle="popover" data-bs-trigger="hover" title="Date/Time" data-bs-content="Adds the current date/time, formatted according to standard .NET date format strings (e.g., yyyy-MM-dd)."></i>
                            </div>
                            <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center" data-segment-type="RandomNumbers">
                                <div><i class="bi bi-dice-3 me-2"></i> Random Numbers <small class="text-muted d-block">e.g., "7341"</small></div>
                                <i class="bi bi-question-circle-fill text-muted" data-bs-toggle="popover" data-bs-trigger="hover" title="Random Numbers" data-bs-content="Adds a set of random digits. The 'length' determines how many."></i>
                            </div>
                            <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center" data-segment-type="Guid">
                                <div><i class="bi bi-hash me-2"></i> GUID <small class="text-muted d-block">A unique identifier</small></div>
                                <i class="bi bi-question-circle-fill text-muted" data-bs-toggle="popover" data-bs-trigger="hover" title="GUID" data-bs-content="A Globally Unique Identifier. 'N': 32 digits. 'D': with hyphens. 'B': with braces {}. 'P': with parentheses ()."></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Access Tab Pane -->
            <div class="tab-pane fade" id="access-tab-pane" role="tabpanel" aria-labelledby="access-tab" tabindex="0">
                <div class="row mt-3">
                    <div class="col-md-6">
                        <div class="card h-100">
                            <div class="card-header">
                                <h5 class="mb-0">General Access</h5>
                            </div>
                            <div class="card-body">
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" id="isPublicSwitch">
                                    <label class="form-check-label" for="isPublicSwitch">Public Write Access</label>
                                </div>
                                <small class="form-text text-muted">When enabled, any authenticated user can add, edit, and delete items in this inventory.</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card h-100">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">Manage Specific User Access</h5>
                                <button id="revokeSelectedBtn" class="btn btn-danger btn-sm" disabled>Revoke Selected</button>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label for="userSearchInput" class="form-label">Add user by exact email address</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control" id="userSearchInput" placeholder="user@example.com">
                                        <button class="btn btn-outline-secondary" type="button" id="userSearchBtn">Search</button>
                                    </div>
                                    <div id="userSearchResults" class="list-group mt-1 position-absolute" style="z-index: 1000; width: calc(100% - 2rem);"></div>
                                </div>
                                <hr />
                                <div class="d-flex justify-content-between align-items-center">
                                    <h6>Users with Write Access:</h6>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="selectAllPermissionsCheckbox">
                                        <label class="form-check-label" for="selectAllPermissionsCheckbox">Select All</label>
                                    </div>
                                </div>
                                <ul id="grantedUsersList" class="list-group mt-2">
                                    <!-- Users will be listed here -->
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Administration Tab Pane -->
            <div class="tab-pane fade" id="admin-tab-pane" role="tabpanel">
                <div class="row mt-3">
                    <!-- Rename Card -->
                    <div class="col-md-12 mb-4">
                        <div class="card">
                            <div class="card-header">Rename Inventory</div>
                            <div class="card-body">
                                <div class="form-group">
                                    <label for="renameInventoryInput" class="form-label">New Inventory Name</label>
                                    <div class="input-group">
                                        <input type="text" id="renameInventoryInput" class="form-control" value="@Model.Name">
                                        <button id="renameInventoryBtn" class="btn btn-outline-primary">Rename</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Transfer Ownership Card -->
                    <div class="col-md-12 mb-4">
                        <div class="card border-warning">
                            <div class="card-header bg-warning text-dark">Transfer Ownership</div>
                            <div class="card-body">
                                <p class="card-text">Transfer this inventory to another user. This action is irreversible. You will lose owner permissions and will only retain access if the new owner grants it to you.</p>
                                <div class="form-group">
                                    <label for="transferOwnerInput" class="form-label">New Owner's Email Address</label>
                                    <div class="input-group">
                                        <input type="email" id="transferOwnerInput" class="form-control" placeholder="user@example.com">
                                        <button id="transferOwnerBtn" class="btn btn-outline-warning">Transfer</button>
                                    </div>
                                    <div id="transferUserSearchResult" class="mt-2"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Delete Inventory Card -->
                    <div class="col-md-12">
                        <div class="card border-danger">
                            <div class="card-header bg-danger text-white">Delete Inventory</div>
                            <div class="card-body">
                                <p class="card-text">Once you delete an inventory, there is no going back. All items, custom fields, and access permissions associated with it will be permanently deleted.</p>
                                <div class="form-group">
                                    <label for="deleteConfirmInput" class="form-label">To confirm, type the name of the inventory: <strong class="text-danger">@Model.Name</strong></label>
                                    <input type="text" id="deleteConfirmInput" class="form-control mb-2" autocomplete="off">
                                    <button id="deleteInventoryBtn" class="btn btn-danger w-100" disabled>Delete this Inventory</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modals -->
<!-- Delete Fields Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="deleteConfirmModalLabel">Confirm Deletion</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this custom field? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Field Modal -->
<div class="modal fade" id="editFieldModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Field Name</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="editFieldForm">
                <div class="modal-body">
                    <input type="hidden" id="editFieldId" />
                    <div class="form-group">
                        <label for="editFieldNameInput" class="form-label">New Name</label>
                        <input type="text" class="form-control" id="editFieldNameInput" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Segment Modal -->
<div class="modal fade" id="editSegmentModal" tabindex="-1" aria-labelledby="editSegmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="editSegmentModalLabel">Edit Segment</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editSegmentForm">
                <input type="hidden" id="segmentId" />
                <div class="modal-body" id="editSegmentModalBody"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Transfer Confirmation Modal -->
<div class="modal fade" id="transferConfirmModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header"><h5 class="modal-title">Confirm Ownership Transfer</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
            <div class="modal-body">
                <p>Are you sure you want to transfer this inventory to <strong id="transferTargetUserEmail"></strong>?</p>
                <p class="text-danger">This action cannot be undone.</p>
            </div>
            <div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button><button type="button" class="btn btn-warning" id="confirmTransferBtn">Confirm Transfer</button></div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteInventoryConfirmModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header"><h5 class="modal-title">Confirm Inventory Deletion</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
            <div class="modal-body">
                <p>Are you sure you want to permanently delete this inventory?</p>
                <p class="text-danger">All items, custom fields, and permissions will be lost forever. This action cannot be undone.</p>
            </div>
            <div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button><button type="button" class="btn btn-danger" id="confirmDeleteInventoryBtn">Confirm Deletion</button></div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .expandable-cell .truncated-text {
            cursor: pointer;
            text-decoration: underline;
            text-decoration-style: dotted;
        }

        #items-table-body td,
        #items-table-head th {
            white-space: nowrap;
        }

        .unselectable {
            -webkit-user-select: none; /* Safari */
            -ms-user-select: none; /* IE 10+ and Edge */
            user-select: none; /* Standard syntax */
        }

        #items-table-head th .truncated-text {
            cursor: default; /* Use default cursor for headers */
            text-decoration: underline;
            text-decoration-style: dotted;
        }

        .form-control.is-invalid:focus, .form-select.is-invalid:focus {
            border-color: #dc3545 !important;
            box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25) !important;
            outline: 0 !important;
        }

        #itemModal .form-label {
            word-break: break-word;
            white-space: normal;
        }

        .toast-container {
            z-index: 1100;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
    <script src="~/js/inventory/common.js" asp-append-version="true"></script>
    <script src="~/js/inventory/itemsTab.js" asp-append-version="true"></script>
    <script src="~/js/inventory/fieldsTab.js" asp-append-version="true"></script>
    <script src="~/js/inventory/customIdTab.js" asp-append-version="true"></script>
    <script src="~/js/inventory/accessTab.js" asp-append-version="true"></script>
    <script src="~/js/inventory/adminTab.js" asp-append-version="true"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        const inventoryId = "@Model.Id";
        const inventoryName = @Json.Serialize(Model.Name);
        const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]')?.value;
        const currentUserId = "@(ViewData["CurrentUserId"] as string)";
        const canWrite = @(ViewData["CanWrite"] as bool? ?? false ? "true" : "false");
        const canManageSettings = @(ViewData["CanManageSettings"] as bool? ?? false ? "true" : "false");

        initializeItemsTab(inventoryId, csrfToken, canWrite);

        if (canManageSettings) {
            initializeFieldsTab(inventoryId, csrfToken);
            initializeCustomIdTab(inventoryId, csrfToken);
            initializeAccessTab(inventoryId, csrfToken);

            initializeAdminTab(inventoryId, inventoryName, csrfToken, currentUserId, canManageSettings);

            initializePopovers();
        }
    });
    </script>
}