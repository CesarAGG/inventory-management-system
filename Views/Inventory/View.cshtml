@model InventoryManagementSystem.Models.Inventory
@{
    ViewData["Title"] = "View Inventory: " + Model.Name;
}
<h2>@ViewData["Title"]</h2>
<div><a asp-action="Index" asp-controller="Home">Back to Home</a></div>
<hr />
<div class="row">
    <div class="col-md-12">
        <ul class="nav nav-tabs" id="inventoryTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="items-tab" data-bs-toggle="tab" data-bs-target="#items-tab-pane" type="button" role="tab">Items</button>
            </li>
        </ul>
        <div class="tab-content" id="inventoryTabsContent">
            <div class="tab-pane fade show active" id="items-tab-pane" role="tabpanel">
                <partial name="_InventoryItemsTab" model="Model" view-data="ViewData" />
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .expandable-cell .truncated-text {
            cursor: pointer;
            text-decoration: underline;
            text-decoration-style: dotted;
        }

        #items-table-body td, #items-table-head th {
            white-space: nowrap;
        }

        .unselectable {
            -webkit-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        .form-control.is-invalid:focus {
            border-color: #dc3545 !important;
            box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25) !important;
            outline: 0 !important;
        }

        #itemModal .form-label {
            word-break: break-word;
            white-space: normal;
        }

        .toast-container {
            z-index: 1100;
        }
    </style>
}

@section Scripts {
    <script src="~/js/inventory/common.js" asp-append-version="true"></script>
    <script src="~/js/inventory/itemsTab.js" asp-append-version="true"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const inventoryId = "@Model.Id";
            const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]')?.value;

            const canWrite = @(ViewData["CanWrite"] as bool? ?? false ? "true" : "false");

            initializeItemsTab(inventoryId, csrfToken, canWrite);
        });
    </script>
}